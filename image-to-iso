#!/bin/bash

set -x
set -e
set -o pipefail

IMAGE_FILE=tmp.img
ISO_TMP_DIR=iso_tmp
ISO_IMAGE_FILE=output.iso

grml-debootstrap -t "$IMAGE_FILE" --vmfile --vmefi --vmsize 3G

true "Mounting..."
DEVINFO=$(kpartx -asv "$IMAGE_FILE")
if [ -z "${DEVINFO}" ] ; then
    echo "Error setting up loopback device." >&2
    exit 1
fi

LOOP_PART="${DEVINFO##add map }"
LOOP_PART="${LOOP_PART// */}"
EFI_TARGET="/dev/mapper/$LOOP_PART"
LOOP_PART="${LOOP_PART%p1}p3"
TARGET="/dev/mapper/$LOOP_PART"
MNTPOINT=$(mktemp -d)

mount "$TARGET" "$MNTPOINT"
mount "$EFI_TARGET" "${MNTPOINT}"/boot/efi

true "Setup live-boot in chroot..."

mount -t proc none "${MNTPOINT}"/proc
mount -t sysfs none "${MNTPOINT}"/sys
mount -t devtmpfs udev "${MNTPOINT}"/dev
mount -t devpts devpts "${MNTPOINT}"/dev/pts

chroot "$MNTPOINT" apt-get update
DEBIAN_FRONTEND=noninteractive chroot "$MNTPOINT" apt-get install --no-install-recommends -y live-boot
chroot "$MNTPOINT" apt-get clean

umount "${MNTPOINT}"/dev/pts
umount "${MNTPOINT}"/dev
umount "${MNTPOINT}"/sys
umount "${MNTPOINT}"/proc

true "Preparing ISO..."

mkdir -p "${ISO_TMP_DIR}/live"
mkdir -p "${ISO_TMP_DIR}/boot/grub"

KVERSION=$(cd "$MNTPOINT"/boot && find vmlinuz-* | tail -1 | sed 's@vmlinuz-@@')

cp -a "${MNTPOINT}"/boot/vmlinuz-"${KVERSION}" "${ISO_TMP_DIR}"/live/vmlinuz
cp -a "${MNTPOINT}"/boot/initrd.img-"${KVERSION}" "${ISO_TMP_DIR}"/live/initrd.img

mksquashfs "${MNTPOINT}" "${ISO_TMP_DIR}/live"/filesystem.squashfs -noappend

cat << EOF > "${ISO_TMP_DIR}"/boot/grub/grub.cfg
set default="0"
set timeout=10

menuentry "Linux" {
    linux /live/vmlinuz boot=live root=(live)
    initrd /live/initrd.img
}


menuentry "Linux in safe mode" {
    linux /live/vmlinuz boot=live xforcevesa root=(live)
    initrd /live/initrd.img
}

EOF

true "Creating ISO..."

grub-mkrescue -o "$ISO_IMAGE_FILE" "$ISO_TMP_DIR"

true "Unmounting..."

umount "${MNTPOINT}"/boot/efi
umount "${MNTPOINT}"
kpartx -d "${TARGET}"

rmdir "${MNTPOINT}"
#rm "$IMAGE_FILE"
rm -r "$ISO_TMP_DIR"

true "Done."
